{"version":3,"sources":["theme/ThemeProviderWhitTheme.tsx","Login/LoginForm.tsx","Login/Login.tsx","index.js"],"names":["theme","createTheme","components","MuiInputBase","styleOverrides","input","transitionDelay","transitionProperty","ThemeProviderWhitTheme","children","StyledEngineProvider","injectFirst","ThemeProvider","initialValues","email","password","keepLogin","LoginForm","props","onSubmit","formik","useFormik","validate","values","errors","test","String","toLowerCase","helpers","a","setSubmitting","Box","sx","marginTop","spacing","padding","handleSubmit","noValidate","Stack","TextField","fullWidth","id","name","type","label","value","onChange","handleChange","required","error","touched","Boolean","helperText","FormControlLabel","control","Checkbox","color","Button","variant","disabled","isSubmitting","CircularProgress","size","Login","login","bind","console","log","Container","component","maxWidth","Paper","Typography","textAlign","this","marginY","Divider","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.014f581f.chunk.js","sourcesContent":["import { ThemeProvider,  StyledEngineProvider,  } from '@mui/material';\r\nimport React from 'react';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport './confilctsMUI-Semantic.css';\r\n\r\n\r\nexport const theme = createTheme({\r\n  components: {\r\n    MuiInputBase: {\r\n      styleOverrides: {\r\n        input: {\r\n          '&:-webkit-autofill': {\r\n            transitionDelay: '9999s',\r\n            transitionProperty: 'background-color, color',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default function ThemeProviderWhitTheme({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Stack,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport React from 'react';\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n  keepLogin: false,\r\n};\r\n\r\nfunction validateEmail(email: string) {\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport type LoginFromValues = typeof initialValues;\r\ninterface LoginFromProps {\r\n  onSubmit: (values: LoginFromValues) => Promise<unknown>;\r\n}\r\n\r\nexport function LoginForm(props: LoginFromProps) {\r\n  const { onSubmit } = props;\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validate: (values) => {\r\n      const errors: Record<string, string> = {};\r\n      const valid = validateEmail(values.email);\r\n      if (!valid) {\r\n        errors.email = 'bad email';\r\n      }\r\n      return errors;\r\n    },\r\n    onSubmit: async (values, helpers) => {\r\n      await onSubmit(values);\r\n      helpers.setSubmitting(false);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(3),\r\n        padding: (theme) => theme.spacing(2),\r\n      }}\r\n    >\r\n      <form onSubmit={formik.handleSubmit} noValidate>\r\n        <Stack spacing={2}>\r\n          <TextField\r\n            fullWidth\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            required\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={\r\n              formik.touched.email && formik.errors.email && formik.errors.email\r\n            }\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"password\"\r\n            type=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            required\r\n            error={formik.touched.password && formik.values.password === ''}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                value={formik.values.keepLogin}\r\n                onChange={formik.handleChange}\r\n                id=\"keepLogin\"\r\n                name=\"keepLogin\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"keep_login\"\r\n          />\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            disabled={formik.isSubmitting}\r\n          >\r\n            {formik.isSubmitting ? (\r\n              <CircularProgress size={20} />\r\n            ) : (\r\n              'login.button_title'\r\n            )}\r\n          </Button>\r\n        </Stack>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n} from '@mui/material';\r\nimport LoginForm, { LoginFromValues } from './LoginForm';\r\n\r\ninterface LoginProps {}\r\n\r\ninterface LoginState {}\r\n\r\nexport class Login extends Component<LoginProps, LoginState> {\r\n  constructor(props: LoginProps) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Login\r\n   * @param object event\r\n   */\r\n  async login(values: LoginFromValues) {\r\n    console.log('Login', { values });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper>\r\n          <Typography component=\"h1\" variant=\"h4\" textAlign=\"center\">\r\n            {'login.title v5'}\r\n          </Typography>\r\n          <LoginForm onSubmit={this.login} />\r\n          <Box sx={{ marginY: 1 }}>\r\n            <Divider />\r\n          </Box>\r\n\r\n          <Box sx={{ marginY: 1, textAlign: 'center' }}>\r\n            <Box sx={{ marginY: 1, textAlign: 'center' }}>\r\n              <Typography component=\"p\" variant=\"body1\">\r\n                {'login.register_message'}\r\n              </Typography>\r\n              {/* <Link to=\"/signup\"> */}\r\n              <Button>{'login.register_link_title'}</Button>\r\n              {/* </Link> */}\r\n            </Box>\r\n            <Box sx={{ marginY: 1, textAlign: 'center' }}>\r\n              <Typography component=\"p\" variant=\"body1\">\r\n                {'login.forgot_password_message'}\r\n              </Typography>\r\n              {/* <Link to=\"/forgotpassword\"> */}\r\n              <Button>{'login.forgot_password_link_title'}</Button>\r\n              {/* </Link> */}\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ThemeProviderWhitTheme from './theme/ThemeProviderWhitTheme';\r\nimport Login from './Login/Login';\r\n\r\nReactDOM.render(\r\n    <ThemeProviderWhitTheme>\r\n      <Login />\r\n    </ThemeProviderWhitTheme>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}