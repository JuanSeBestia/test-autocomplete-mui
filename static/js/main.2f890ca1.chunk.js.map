{"version":3,"sources":["theme/ThemeProviderWhitTheme.tsx","Login/LoginForm.tsx","Login/Login.tsx","index.js"],"names":["theme","createTheme","palette","primary","main","secondary","components","MuiIconButton","styleOverrides","root","color","MuiInputBase","input","transitionDelay","transitionProperty","ThemeProviderWhitTheme","children","ThemeProvider","initialValues","email","password","keepLogin","LoginForm","props","onSubmit","formik","useFormik","validate","values","errors","test","String","toLowerCase","helpers","a","setSubmitting","Box","sx","width","marginTop","spacing","padding","handleSubmit","noValidate","Stack","TextField","fullWidth","id","name","type","label","value","onChange","handleChange","required","error","touched","Boolean","helperText","FormControlLabel","control","Checkbox","Button","variant","disabled","isSubmitting","CircularProgress","size","Login","login","bind","console","log","Container","component","maxWidth","Paper","Typography","textAlign","this","marginY","Divider","Component","Sentry","dsn","release","version","environment","process","ReactDOM","render","StyledEngineProvider","injectFirst","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.2f890ca1.chunk.js","sourcesContent":["import { ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport { createTheme } from '@material-ui/core/styles';\nimport './confilctsMUI-Semantic.css';\n\nexport const componentsOverrides = {\n  MuiIconButton: {\n    styleOverrides: {\n      root: {\n        ':disabled': {\n          color: '#8b8a8ad1',\n        },\n      },\n    },\n  },\n  MuiInputBase: {\n    styleOverrides: {\n      input: {\n        '&:-webkit-autofill': {\n          transitionDelay: '9999s',\n          transitionProperty: 'background-color, color',\n        },\n      },\n    },\n  },\n};\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2185d0',\n    },\n    secondary: {\n      // Nav color\n      main: '#6f6f6fbf',\n    },\n  },\n  components: componentsOverrides,\n});\n\nexport default function ThemeProviderWhitTheme({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n","import {\n  Box,\n  Button,\n  Checkbox,\n  CircularProgress,\n  FormControlLabel,\n  Stack,\n  TextField,\n} from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport React from 'react';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  keepLogin: false,\n};\n\nfunction validateEmail(email: string) {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport type LoginFromValues = typeof initialValues;\ninterface LoginFromProps {\n  onSubmit: (values: LoginFromValues) => Promise<unknown>;\n}\n\nexport function LoginForm(props: LoginFromProps) {\n  const { onSubmit } = props;\n  const formik = useFormik({\n    initialValues,\n    validate: (values) => {\n      const errors: Record<string, string> = {};\n      const valid = validateEmail(values.email);\n      if (!valid) {\n        errors.email = 'bad email';\n      }\n      return errors;\n    },\n    onSubmit: async (values, helpers) => {\n      await onSubmit(values);\n      helpers.setSubmitting(false);\n    },\n  });\n\n  return (\n    <Box\n      sx={{\n        width: '100%', // Fix IE 11 issue.\n        marginTop: (theme) => theme.spacing(3),\n        padding: (theme) => theme.spacing(2),\n      }}\n    >\n      <form onSubmit={formik.handleSubmit} noValidate>\n        <Stack spacing={2}>\n          <TextField\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            label=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            required\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={\n              formik.touched.email && formik.errors.email && formik.errors.email\n            }\n          />\n          <TextField\n            fullWidth\n            id=\"password\"\n            name=\"password\"\n            label=\"password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            required\n            error={formik.touched.password && formik.values.password === ''}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={formik.values.keepLogin}\n                onChange={formik.handleChange}\n                id=\"keepLogin\"\n                name=\"keepLogin\"\n                color=\"primary\"\n              />\n            }\n            label=\"keep_login\"\n          />\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            type=\"submit\"\n            disabled={formik.isSubmitting}\n          >\n            {formik.isSubmitting ? (\n              <CircularProgress size={20} />\n            ) : (\n              'login.button_title'\n            )}\n          </Button>\n        </Stack>\n      </form>\n    </Box>\n  );\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\n\nimport {\n  Box,\n  Container,\n  Divider,\n  Paper,\n  Typography,\n  Button,\n} from '@material-ui/core';\nimport LoginForm, { LoginFromValues } from './LoginForm';\n\ninterface LoginProps {}\n\ninterface LoginState {}\n\nexport class Login extends Component<LoginProps, LoginState> {\n  constructor(props: LoginProps) {\n    super(props);\n    this.login = this.login.bind(this);\n  }\n\n  /**\n   * Login\n   * @param object event\n   */\n  async login(values: LoginFromValues) {\n    console.log('Login', { values });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Paper>\n          <Typography component=\"h1\" variant=\"h4\" textAlign=\"center\">\n            {'login.title'}\n          </Typography>\n          <LoginForm onSubmit={this.login} />\n          <Box sx={{ marginY: 1 }}>\n            <Divider />\n          </Box>\n\n          <Box sx={{ marginY: 1, textAlign: 'center' }}>\n            <Box sx={{ marginY: 1, textAlign: 'center' }}>\n              <Typography component=\"p\" variant=\"body1\">\n                {'login.register_message'}\n              </Typography>\n              {/* <Link to=\"/signup\"> */}\n              <Button>{'login.register_link_title'}</Button>\n              {/* </Link> */}\n            </Box>\n            <Box sx={{ marginY: 1, textAlign: 'center' }}>\n              <Typography component=\"p\" variant=\"body1\">\n                {'login.forgot_password_message'}\n              </Typography>\n              {/* <Link to=\"/forgotpassword\"> */}\n              <Button>{'login.forgot_password_link_title'}</Button>\n              {/* </Link> */}\n            </Box>\n          </Box>\n        </Paper>\n      </Container>\n    );\n  }\n}\nexport default Login;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ModalContainer from 'react-modal-promise';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as Sentry from '@sentry/react';\n\n// import store from './redux/Store';\n// import App from './App';\n// import routes from './routes';\n// import { initializeRestClient } from './rest';\n\nimport { version } from '../package.json';\n\nimport '@fontsource/roboto';\nimport { CssBaseline } from '@material-ui/core';\nimport { StyledEngineProvider } from '@material-ui/styled-engine';\nimport ThemeProviderWhitTheme from './theme/ThemeProviderWhitTheme';\nimport './index.css';\nimport Login from './Login/Login';\n\n// theme\n/**\n * Features toggles: allow the integrate features in the code before they're\n * finished and ready to release\n */\nSentry.init({\n  dsn: 'https://8a70625927e34ca8be25f9b8bea9a771@sentry.io/170564',\n  release: version,\n  environment: process.env.NODE_ENV,\n});\n\n// initializeRestClient(store);\n\n/*\n * Redirect from shopmanager -> devicemanager\n */\nReactDOM.render(\n  // <Provider store={store}>\n  <StyledEngineProvider injectFirst>\n    <CssBaseline />\n    <ThemeProviderWhitTheme>\n      <BrowserRouter>\n        <Login />\n        {/* <App store={store}>\n            <Switch>\n              {routes.map(({ path, render }, index) => (\n                <Route\n                  exact\n                  path={path}\n                  render={render}\n                  key={index.toString()}\n                />\n              ))}\n            </Switch>\n          </App> */}\n      </BrowserRouter>\n    </ThemeProviderWhitTheme>\n    <ModalContainer />\n  </StyledEngineProvider>,\n  // </Provider>\n  document.getElementById('root')\n);\n"],"sourceRoot":""}